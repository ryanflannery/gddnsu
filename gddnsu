#!/bin/sh

# ensure we have a config file
if [ 1 -ne $# ];
then
   echo "usage: $0 /path/to/file"
   exit 1
fi
configfile="$1"

# and can read that config file
if [ ! -r "$1" ];
then
   echo "$0: fatal error: can't read file '$1'"
   exit 2
fi

# ensure we have curl
if ! which curl > /dev/null 2>&1
then
   echo "$0: fatal error: can't find curl"
   exit 3
fi

# get our external ip
if ! ip=$(curl -s ipinfo.io/ip)
then
   echo "$0: error: can't get external ip"
   exit 2
fi

# parse file and update
while read -r line
do
   # skip comment rows
   if [ "#-" = "${line%${line#?}}-" ];
   then
      continue
   fi

   set -- $line

   # skip blank lines
   if [ 0 -eq $# ];
   then
      continue
   fi

   # skip malformed lines
   if [ 3 -ne $# ];
   then
      echo "$0: error: malformed line '$line'. Skipping. See documentation."
      continue
   fi

   # update google domains ddns
   domain="$1"
   username="$2"
   password="$3"
   gdns="domains.google.com/nic/update"
   url="https://${username}:${password}@${gdns}?hostname=${domain}&myip=${ip}"

   # parse response
   if ! response=$(curl -s "$url" | awk '{print $1}')
   then
      echo "$0: error: failed to update ${domain}: response: ${response}"
   elif [ "good" = "${response}" ];
   then
      echo "$0: success: ${domain} changed to ${ip}"
   elif [ "nochg" = "${response}" ];
   then
      #echo "$0: success: no change to ${domain}"
      continue
   else
      echo "$0: error: failed to update ${domain}: response: ${response}"
   fi

done < "$configfile"

